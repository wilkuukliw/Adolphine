const credentials = require("../config/mailCredentials");
const nodemailer = require("nodemailer");
const moment = require("moment-timezone");

const dispatcher = async ({
emailBody,
sendAt
}) => {
  moment.utc(sendAt).tz("Europe/Copenhagen");
  

let transporter = nodemailer.createTransport({
    host: 'smtp.gmail.com',
    port: 465,
    pool: true,
    secure: true, // use SSL
    auth: {
        user: credentials.user,
        pass: credentials.pass
    }

});


  // verify connection configuration
   await transporter.verify();
  console.log("email account ready");



  // get emails from database
//var mailingList =["anna.maria.wilczek@gmail.com", "anna.wilczek@student.uw.edu.pl", "anwi@simcorp.com" ];
 //mailingList.toString();
  
  const concatEmail = "anna.maria.wilczek@gmail.com";  //username.concat("@simcorp.com");
 // email ="anna.maria.wilczek@gmail.com";

 
  
   // send mail with defined transport object

   var subscribers = [  async () => {
    await Subscriber.query().select();
  }];

  subscribers.toString();



   const info = await transporter.sendMail({
    from: credentials.user,  //`${email} `, // list of receivers
    to: concatEmail,
    subject: "Adolphine - New reminder delivered",
    html: `
           <p>Dear SimCorper</p>
           
           <p>Here is something worth remembering for you</p>

           <h1>Reminder: ${emailBody}</h1>
          
           <p>Best regards,<br>
           Adolphine<br>
           <p><input type="text" value="Above message is autogenerated." disabled /> </p>`,
  });
  
};




module.exports = dispatcher;


// maillist.forEach(function (to, i , array) {
//     (function(i,to){
//        msg.to = to;
//     transporter.mailSender(msg, function (err) {
//       if (err) { 
//         console.log('Sending to ' + to + ' failed: ' + err);
//         return;
//       } else { 
//         console.log('Sent to ' + to);
//       }
  
//       if (i === maillist.length - 1) { msg.transport.close(); }
//     });
//   })(i,to)
//   });


//consider moving password reset nodemailer here to dispatcher

// const Subscriber = require('../models/Subscriber.js');



// const dispatcher = async ({
// emailBody,
// sendAt
// }) => {
//   moment.utc(sendAt).tz("Europe/Copenhagen");

// let transporter = nodemailer.createTransport({
//     host: 'smtp.gmail.com',
//     port: 465,
//     pool: true,
//     secure: true, // use SSL
//     auth: {
//         user: credentials.user,
//         pass: credentials.pass
//     }

// });


//   // verify connection configuration
//    await transporter.verify();
//   console.log("email account ready");



//   // get emails from database
// //var mailingList =["anna.maria.wilczek@gmail.com", "anna.wilczek@student.uw.edu.pl", "anwi@simcorp.com" ];
//  //mailingList.toString();
  
//   const concatEmail = "anna.maria.wilczek@gmail.com";  //username.concat("@simcorp.com");
//  // email ="anna.maria.wilczek@gmail.com";

 
  
//    // send mail with defined transport object

//   //  const subscribers = async () => {
//   //   await Subscriber.query().select();
//   //   console.log(subscribers);
//   // };



//    const info = await transporter.sendMail({
//     from: credentials.user,  //`${email} `, // list of receivers
//     to: concatEmail,
//     subject: "Adolphine - New reminder delivered",
//     html: `
//            <p>Dear SimCorper</p>
           
//            <p>Here is something worth remembering for you</p>

//            <h1>Reminder: ${emailBody}</h1>
          
//            <p>Best regards,<br>
//            Adolphine<br>
//            <p><input type="text" value="Above message is autogenerated." disabled /> </p>`,
//   });
  
// };
